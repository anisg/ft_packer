
woody_woodpacker:     file format elf64-x86-64


Disassembly of section .init:

0000000000400518 <_init>:
  400518:	48 83 ec 08          	sub    $0x8,%rsp
  40051c:	48 8b 05 d5 0a 20 00 	mov    0x200ad5(%rip),%rax        # 600ff8 <__gmon_start__>
  400523:	48 85 c0             	test   %rax,%rax
  400526:	74 02                	je     40052a <_init+0x12>
  400528:	ff d0                	callq  *%rax
  40052a:	48 83 c4 08          	add    $0x8,%rsp
  40052e:	c3                   	retq   

Disassembly of section .plt:

0000000000400530 <.plt>:
  400530:	ff 35 d2 0a 20 00    	pushq  0x200ad2(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400536:	ff 25 d4 0a 20 00    	jmpq   *0x200ad4(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40053c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400540 <write@plt>:
  400540:	ff 25 d2 0a 20 00    	jmpq   *0x200ad2(%rip)        # 601018 <write@GLIBC_2.2.5>
  400546:	68 00 00 00 00       	pushq  $0x0
  40054b:	e9 e0 ff ff ff       	jmpq   400530 <.plt>

0000000000400550 <mmap@plt>:
  400550:	ff 25 ca 0a 20 00    	jmpq   *0x200aca(%rip)        # 601020 <mmap@GLIBC_2.2.5>
  400556:	68 01 00 00 00       	pushq  $0x1
  40055b:	e9 d0 ff ff ff       	jmpq   400530 <.plt>

0000000000400560 <printf@plt>:
  400560:	ff 25 c2 0a 20 00    	jmpq   *0x200ac2(%rip)        # 601028 <printf@GLIBC_2.2.5>
  400566:	68 02 00 00 00       	pushq  $0x2
  40056b:	e9 c0 ff ff ff       	jmpq   400530 <.plt>

0000000000400570 <close@plt>:
  400570:	ff 25 ba 0a 20 00    	jmpq   *0x200aba(%rip)        # 601030 <close@GLIBC_2.2.5>
  400576:	68 03 00 00 00       	pushq  $0x3
  40057b:	e9 b0 ff ff ff       	jmpq   400530 <.plt>

0000000000400580 <read@plt>:
  400580:	ff 25 b2 0a 20 00    	jmpq   *0x200ab2(%rip)        # 601038 <read@GLIBC_2.2.5>
  400586:	68 04 00 00 00       	pushq  $0x4
  40058b:	e9 a0 ff ff ff       	jmpq   400530 <.plt>

0000000000400590 <__fxstat@plt>:
  400590:	ff 25 aa 0a 20 00    	jmpq   *0x200aaa(%rip)        # 601040 <__fxstat@GLIBC_2.2.5>
  400596:	68 05 00 00 00       	pushq  $0x5
  40059b:	e9 90 ff ff ff       	jmpq   400530 <.plt>

00000000004005a0 <open@plt>:
  4005a0:	ff 25 a2 0a 20 00    	jmpq   *0x200aa2(%rip)        # 601048 <open@GLIBC_2.2.5>
  4005a6:	68 06 00 00 00       	pushq  $0x6
  4005ab:	e9 80 ff ff ff       	jmpq   400530 <.plt>

Disassembly of section .text:

00000000004005b0 <_start>:
  4005b0:	31 ed                	xor    %ebp,%ebp
  4005b2:	49 89 d1             	mov    %rdx,%r9
  4005b5:	5e                   	pop    %rsi
  4005b6:	48 89 e2             	mov    %rsp,%rdx
  4005b9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  4005bd:	50                   	push   %rax
  4005be:	54                   	push   %rsp
  4005bf:	49 c7 c0 60 0a 40 00 	mov    $0x400a60,%r8
  4005c6:	48 c7 c1 f0 09 40 00 	mov    $0x4009f0,%rcx
  4005cd:	48 c7 c7 4a 07 40 00 	mov    $0x40074a,%rdi
  4005d4:	ff 15 16 0a 20 00    	callq  *0x200a16(%rip)        # 600ff0 <__libc_start_main@GLIBC_2.2.5>
  4005da:	f4                   	hlt    
  4005db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004005e0 <deregister_tm_clones>:
  4005e0:	55                   	push   %rbp
  4005e1:	b8 60 10 60 00       	mov    $0x601060,%eax
  4005e6:	48 3d 60 10 60 00    	cmp    $0x601060,%rax
  4005ec:	48 89 e5             	mov    %rsp,%rbp
  4005ef:	74 17                	je     400608 <deregister_tm_clones+0x28>
  4005f1:	b8 00 00 00 00       	mov    $0x0,%eax
  4005f6:	48 85 c0             	test   %rax,%rax
  4005f9:	74 0d                	je     400608 <deregister_tm_clones+0x28>
  4005fb:	5d                   	pop    %rbp
  4005fc:	bf 60 10 60 00       	mov    $0x601060,%edi
  400601:	ff e0                	jmpq   *%rax
  400603:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400608:	5d                   	pop    %rbp
  400609:	c3                   	retq   
  40060a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400610 <register_tm_clones>:
  400610:	be 60 10 60 00       	mov    $0x601060,%esi
  400615:	55                   	push   %rbp
  400616:	48 81 ee 60 10 60 00 	sub    $0x601060,%rsi
  40061d:	48 89 e5             	mov    %rsp,%rbp
  400620:	48 c1 fe 03          	sar    $0x3,%rsi
  400624:	48 89 f0             	mov    %rsi,%rax
  400627:	48 c1 e8 3f          	shr    $0x3f,%rax
  40062b:	48 01 c6             	add    %rax,%rsi
  40062e:	48 d1 fe             	sar    %rsi
  400631:	74 15                	je     400648 <register_tm_clones+0x38>
  400633:	b8 00 00 00 00       	mov    $0x0,%eax
  400638:	48 85 c0             	test   %rax,%rax
  40063b:	74 0b                	je     400648 <register_tm_clones+0x38>
  40063d:	5d                   	pop    %rbp
  40063e:	bf 60 10 60 00       	mov    $0x601060,%edi
  400643:	ff e0                	jmpq   *%rax
  400645:	0f 1f 00             	nopl   (%rax)
  400648:	5d                   	pop    %rbp
  400649:	c3                   	retq   
  40064a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400650 <__do_global_dtors_aux>:
  400650:	80 3d 09 0a 20 00 00 	cmpb   $0x0,0x200a09(%rip)        # 601060 <__TMC_END__>
  400657:	75 17                	jne    400670 <__do_global_dtors_aux+0x20>
  400659:	55                   	push   %rbp
  40065a:	48 89 e5             	mov    %rsp,%rbp
  40065d:	e8 7e ff ff ff       	callq  4005e0 <deregister_tm_clones>
  400662:	c6 05 f7 09 20 00 01 	movb   $0x1,0x2009f7(%rip)        # 601060 <__TMC_END__>
  400669:	5d                   	pop    %rbp
  40066a:	c3                   	retq   
  40066b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400670:	f3 c3                	repz retq 
  400672:	0f 1f 40 00          	nopl   0x0(%rax)
  400676:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40067d:	00 00 00 

0000000000400680 <frame_dummy>:
  400680:	55                   	push   %rbp
  400681:	48 89 e5             	mov    %rsp,%rbp
  400684:	5d                   	pop    %rbp
  400685:	eb 89                	jmp    400610 <register_tm_clones>

0000000000400687 <fail>:
  400687:	55                   	push   %rbp
  400688:	48 89 e5             	mov    %rsp,%rbp
  40068b:	48 83 ec 10          	sub    $0x10,%rsp
  40068f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  400693:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400697:	48 89 c6             	mov    %rax,%rsi
  40069a:	bf 90 0a 40 00       	mov    $0x400a90,%edi
  40069f:	b8 00 00 00 00       	mov    $0x0,%eax
  4006a4:	e8 b7 fe ff ff       	callq  400560 <printf@plt>
  4006a9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  4006ae:	c9                   	leaveq 
  4006af:	c3                   	retq   

00000000004006b0 <usage>:
  4006b0:	55                   	push   %rbp
  4006b1:	48 89 e5             	mov    %rsp,%rbp
  4006b4:	48 83 ec 10          	sub    $0x10,%rsp
  4006b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4006bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4006c0:	48 89 c6             	mov    %rax,%rsi
  4006c3:	bf 9b 0a 40 00       	mov    $0x400a9b,%edi
  4006c8:	b8 00 00 00 00       	mov    $0x0,%eax
  4006cd:	e8 8e fe ff ff       	callq  400560 <printf@plt>
  4006d2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  4006d7:	c9                   	leaveq 
  4006d8:	c3                   	retq   

00000000004006d9 <packer>:
  4006d9:	55                   	push   %rbp
  4006da:	48 89 e5             	mov    %rsp,%rbp
  4006dd:	48 83 ec 30          	sub    $0x30,%rsp
  4006e1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4006e5:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
  4006e9:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
  4006ed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4006f1:	48 89 ce             	mov    %rcx,%rsi
  4006f4:	48 89 c7             	mov    %rax,%rdi
  4006f7:	e8 89 00 00 00       	callq  400785 <fget>
  4006fc:	85 c0                	test   %eax,%eax
  4006fe:	75 0c                	jne    40070c <packer+0x33>
  400700:	bf aa 0a 40 00       	mov    $0x400aaa,%edi
  400705:	e8 7d ff ff ff       	callq  400687 <fail>
  40070a:	eb 3c                	jmp    400748 <packer+0x6f>
  40070c:	b8 00 00 00 00       	mov    $0x0,%eax
  400711:	e8 a7 01 00 00       	callq  4008bd <random_key>
  400716:	89 45 fc             	mov    %eax,-0x4(%rbp)
  400719:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  40071d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400721:	8b 55 fc             	mov    -0x4(%rbp),%edx
  400724:	48 89 ce             	mov    %rcx,%rsi
  400727:	48 89 c7             	mov    %rax,%rdi
  40072a:	e8 d5 01 00 00       	callq  400904 <encrypt_bin>
  40072f:	8b 45 fc             	mov    -0x4(%rbp),%eax
  400732:	89 c6                	mov    %eax,%esi
  400734:	bf ba 0a 40 00       	mov    $0x400aba,%edi
  400739:	b8 00 00 00 00       	mov    $0x0,%eax
  40073e:	e8 1d fe ff ff       	callq  400560 <printf@plt>
  400743:	b8 00 00 00 00       	mov    $0x0,%eax
  400748:	c9                   	leaveq 
  400749:	c3                   	retq   

000000000040074a <main>:
  40074a:	55                   	push   %rbp
  40074b:	48 89 e5             	mov    %rsp,%rbp
  40074e:	48 83 ec 10          	sub    $0x10,%rsp
  400752:	89 7d fc             	mov    %edi,-0x4(%rbp)
  400755:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  400759:	83 7d fc 02          	cmpl   $0x2,-0x4(%rbp)
  40075d:	74 11                	je     400770 <main+0x26>
  40075f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400763:	48 8b 00             	mov    (%rax),%rax
  400766:	48 89 c7             	mov    %rax,%rdi
  400769:	e8 42 ff ff ff       	callq  4006b0 <usage>
  40076e:	eb 13                	jmp    400783 <main+0x39>
  400770:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400774:	48 83 c0 08          	add    $0x8,%rax
  400778:	48 8b 00             	mov    (%rax),%rax
  40077b:	48 89 c7             	mov    %rax,%rdi
  40077e:	e8 56 ff ff ff       	callq  4006d9 <packer>
  400783:	c9                   	leaveq 
  400784:	c3                   	retq   

0000000000400785 <fget>:
  400785:	55                   	push   %rbp
  400786:	48 89 e5             	mov    %rsp,%rbp
  400789:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
  400790:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
  400797:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)
  40079e:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
  4007a5:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  4007ac:	be 00 00 00 00       	mov    $0x0,%esi
  4007b1:	48 89 c7             	mov    %rax,%rdi
  4007b4:	b8 00 00 00 00       	mov    $0x0,%eax
  4007b9:	e8 e2 fd ff ff       	callq  4005a0 <open@plt>
  4007be:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4007c1:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  4007c5:	79 0a                	jns    4007d1 <fget+0x4c>
  4007c7:	b8 00 00 00 00       	mov    $0x0,%eax
  4007cc:	e9 8a 00 00 00       	jmpq   40085b <fget+0xd6>
  4007d1:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
  4007d8:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4007db:	48 89 d6             	mov    %rdx,%rsi
  4007de:	89 c7                	mov    %eax,%edi
  4007e0:	e8 8b 02 00 00       	callq  400a70 <__fstat>
  4007e5:	85 c0                	test   %eax,%eax
  4007e7:	79 07                	jns    4007f0 <fget+0x6b>
  4007e9:	b8 00 00 00 00       	mov    $0x0,%eax
  4007ee:	eb 6b                	jmp    40085b <fget+0xd6>
  4007f0:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  4007f4:	48 89 c6             	mov    %rax,%rsi
  4007f7:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4007fa:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  400800:	41 89 c0             	mov    %eax,%r8d
  400803:	b9 02 00 00 00       	mov    $0x2,%ecx
  400808:	ba 03 00 00 00       	mov    $0x3,%edx
  40080d:	bf 00 00 00 00       	mov    $0x0,%edi
  400812:	e8 39 fd ff ff       	callq  400550 <mmap@plt>
  400817:	48 89 c2             	mov    %rax,%rdx
  40081a:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
  400821:	48 89 10             	mov    %rdx,(%rax)
  400824:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
  40082b:	48 8b 00             	mov    (%rax),%rax
  40082e:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  400832:	75 07                	jne    40083b <fget+0xb6>
  400834:	b8 00 00 00 00       	mov    $0x0,%eax
  400839:	eb 20                	jmp    40085b <fget+0xd6>
  40083b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  40083f:	48 89 c2             	mov    %rax,%rdx
  400842:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  400849:	48 89 10             	mov    %rdx,(%rax)
  40084c:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40084f:	89 c7                	mov    %eax,%edi
  400851:	e8 1a fd ff ff       	callq  400570 <close@plt>
  400856:	b8 01 00 00 00       	mov    $0x1,%eax
  40085b:	c9                   	leaveq 
  40085c:	c3                   	retq   

000000000040085d <fput>:
  40085d:	55                   	push   %rbp
  40085e:	48 89 e5             	mov    %rsp,%rbp
  400861:	48 83 ec 30          	sub    $0x30,%rsp
  400865:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  400869:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40086d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  400871:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400875:	be 01 00 00 00       	mov    $0x1,%esi
  40087a:	48 89 c7             	mov    %rax,%rdi
  40087d:	b8 00 00 00 00       	mov    $0x0,%eax
  400882:	e8 19 fd ff ff       	callq  4005a0 <open@plt>
  400887:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40088a:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  40088e:	79 07                	jns    400897 <fput+0x3a>
  400890:	b8 00 00 00 00       	mov    $0x0,%eax
  400895:	eb 24                	jmp    4008bb <fput+0x5e>
  400897:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40089b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40089f:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4008a2:	48 89 ce             	mov    %rcx,%rsi
  4008a5:	89 c7                	mov    %eax,%edi
  4008a7:	e8 94 fc ff ff       	callq  400540 <write@plt>
  4008ac:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4008af:	89 c7                	mov    %eax,%edi
  4008b1:	e8 ba fc ff ff       	callq  400570 <close@plt>
  4008b6:	b8 01 00 00 00       	mov    $0x1,%eax
  4008bb:	c9                   	leaveq 
  4008bc:	c3                   	retq   

00000000004008bd <random_key>:
  4008bd:	55                   	push   %rbp
  4008be:	48 89 e5             	mov    %rsp,%rbp
  4008c1:	48 83 ec 10          	sub    $0x10,%rsp
  4008c5:	be 00 00 00 00       	mov    $0x0,%esi
  4008ca:	bf c1 0a 40 00       	mov    $0x400ac1,%edi
  4008cf:	b8 00 00 00 00       	mov    $0x0,%eax
  4008d4:	e8 c7 fc ff ff       	callq  4005a0 <open@plt>
  4008d9:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4008dc:	83 7d fc ff          	cmpl   $0xffffffff,-0x4(%rbp)
  4008e0:	75 07                	jne    4008e9 <random_key+0x2c>
  4008e2:	b8 00 00 00 00       	mov    $0x0,%eax
  4008e7:	eb 19                	jmp    400902 <random_key+0x45>
  4008e9:	48 8d 4d f8          	lea    -0x8(%rbp),%rcx
  4008ed:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4008f0:	ba 04 00 00 00       	mov    $0x4,%edx
  4008f5:	48 89 ce             	mov    %rcx,%rsi
  4008f8:	89 c7                	mov    %eax,%edi
  4008fa:	e8 81 fc ff ff       	callq  400580 <read@plt>
  4008ff:	8b 45 f8             	mov    -0x8(%rbp),%eax
  400902:	c9                   	leaveq 
  400903:	c3                   	retq   

0000000000400904 <encrypt_bin>:
  400904:	55                   	push   %rbp
  400905:	48 89 e5             	mov    %rsp,%rbp
  400908:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  40090c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  400910:	89 55 cc             	mov    %edx,-0x34(%rbp)
  400913:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  40091a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40091e:	8b 00                	mov    (%rax),%eax
  400920:	89 45 fc             	mov    %eax,-0x4(%rbp)
  400923:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400927:	8b 40 04             	mov    0x4(%rax),%eax
  40092a:	89 45 f8             	mov    %eax,-0x8(%rbp)
  40092d:	8b 45 cc             	mov    -0x34(%rbp),%eax
  400930:	88 45 ef             	mov    %al,-0x11(%rbp)
  400933:	8b 45 cc             	mov    -0x34(%rbp),%eax
  400936:	c1 e8 08             	shr    $0x8,%eax
  400939:	88 45 ee             	mov    %al,-0x12(%rbp)
  40093c:	8b 45 cc             	mov    -0x34(%rbp),%eax
  40093f:	c1 e8 10             	shr    $0x10,%eax
  400942:	88 45 ed             	mov    %al,-0x13(%rbp)
  400945:	8b 45 cc             	mov    -0x34(%rbp),%eax
  400948:	c1 e8 18             	shr    $0x18,%eax
  40094b:	88 45 ec             	mov    %al,-0x14(%rbp)
  40094e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
  400955:	eb 63                	jmp    4009ba <encrypt_bin+0xb6>
  400957:	81 6d f4 47 86 c8 61 	subl   $0x61c88647,-0xc(%rbp)
  40095e:	8b 45 f8             	mov    -0x8(%rbp),%eax
  400961:	c1 e0 04             	shl    $0x4,%eax
  400964:	89 c2                	mov    %eax,%edx
  400966:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
  40096a:	8d 0c 02             	lea    (%rdx,%rax,1),%ecx
  40096d:	8b 55 f8             	mov    -0x8(%rbp),%edx
  400970:	8b 45 f4             	mov    -0xc(%rbp),%eax
  400973:	01 d0                	add    %edx,%eax
  400975:	31 c1                	xor    %eax,%ecx
  400977:	89 ca                	mov    %ecx,%edx
  400979:	8b 45 f8             	mov    -0x8(%rbp),%eax
  40097c:	c1 e8 05             	shr    $0x5,%eax
  40097f:	89 c1                	mov    %eax,%ecx
  400981:	0f b6 45 ee          	movzbl -0x12(%rbp),%eax
  400985:	01 c8                	add    %ecx,%eax
  400987:	31 d0                	xor    %edx,%eax
  400989:	01 45 fc             	add    %eax,-0x4(%rbp)
  40098c:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40098f:	c1 e0 04             	shl    $0x4,%eax
  400992:	89 c2                	mov    %eax,%edx
  400994:	0f b6 45 ed          	movzbl -0x13(%rbp),%eax
  400998:	8d 0c 02             	lea    (%rdx,%rax,1),%ecx
  40099b:	8b 55 fc             	mov    -0x4(%rbp),%edx
  40099e:	8b 45 f4             	mov    -0xc(%rbp),%eax
  4009a1:	01 d0                	add    %edx,%eax
  4009a3:	31 c1                	xor    %eax,%ecx
  4009a5:	89 ca                	mov    %ecx,%edx
  4009a7:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4009aa:	c1 e8 05             	shr    $0x5,%eax
  4009ad:	89 c1                	mov    %eax,%ecx
  4009af:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
  4009b3:	01 c8                	add    %ecx,%eax
  4009b5:	31 d0                	xor    %edx,%eax
  4009b7:	01 45 f8             	add    %eax,-0x8(%rbp)
  4009ba:	8b 45 f0             	mov    -0x10(%rbp),%eax
  4009bd:	8d 50 01             	lea    0x1(%rax),%edx
  4009c0:	89 55 f0             	mov    %edx,-0x10(%rbp)
  4009c3:	83 f8 1f             	cmp    $0x1f,%eax
  4009c6:	76 8f                	jbe    400957 <encrypt_bin+0x53>
  4009c8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4009cc:	8b 55 fc             	mov    -0x4(%rbp),%edx
  4009cf:	89 10                	mov    %edx,(%rax)
  4009d1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4009d5:	48 8d 50 04          	lea    0x4(%rax),%rdx
  4009d9:	8b 45 f8             	mov    -0x8(%rbp),%eax
  4009dc:	89 02                	mov    %eax,(%rdx)
  4009de:	90                   	nop
  4009df:	5d                   	pop    %rbp
  4009e0:	c3                   	retq   
  4009e1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4009e8:	00 00 00 
  4009eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004009f0 <__libc_csu_init>:
  4009f0:	41 57                	push   %r15
  4009f2:	41 56                	push   %r14
  4009f4:	49 89 d7             	mov    %rdx,%r15
  4009f7:	41 55                	push   %r13
  4009f9:	41 54                	push   %r12
  4009fb:	4c 8d 25 0e 04 20 00 	lea    0x20040e(%rip),%r12        # 600e10 <__frame_dummy_init_array_entry>
  400a02:	55                   	push   %rbp
  400a03:	48 8d 2d 0e 04 20 00 	lea    0x20040e(%rip),%rbp        # 600e18 <__init_array_end>
  400a0a:	53                   	push   %rbx
  400a0b:	41 89 fd             	mov    %edi,%r13d
  400a0e:	49 89 f6             	mov    %rsi,%r14
  400a11:	4c 29 e5             	sub    %r12,%rbp
  400a14:	48 83 ec 08          	sub    $0x8,%rsp
  400a18:	48 c1 fd 03          	sar    $0x3,%rbp
  400a1c:	e8 f7 fa ff ff       	callq  400518 <_init>
  400a21:	48 85 ed             	test   %rbp,%rbp
  400a24:	74 20                	je     400a46 <__libc_csu_init+0x56>
  400a26:	31 db                	xor    %ebx,%ebx
  400a28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  400a2f:	00 
  400a30:	4c 89 fa             	mov    %r15,%rdx
  400a33:	4c 89 f6             	mov    %r14,%rsi
  400a36:	44 89 ef             	mov    %r13d,%edi
  400a39:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  400a3d:	48 83 c3 01          	add    $0x1,%rbx
  400a41:	48 39 dd             	cmp    %rbx,%rbp
  400a44:	75 ea                	jne    400a30 <__libc_csu_init+0x40>
  400a46:	48 83 c4 08          	add    $0x8,%rsp
  400a4a:	5b                   	pop    %rbx
  400a4b:	5d                   	pop    %rbp
  400a4c:	41 5c                	pop    %r12
  400a4e:	41 5d                	pop    %r13
  400a50:	41 5e                	pop    %r14
  400a52:	41 5f                	pop    %r15
  400a54:	c3                   	retq   
  400a55:	90                   	nop
  400a56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400a5d:	00 00 00 

0000000000400a60 <__libc_csu_fini>:
  400a60:	f3 c3                	repz retq 
  400a62:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400a69:	00 00 00 
  400a6c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400a70 <__fstat>:
  400a70:	48 89 f2             	mov    %rsi,%rdx
  400a73:	89 fe                	mov    %edi,%esi
  400a75:	bf 01 00 00 00       	mov    $0x1,%edi
  400a7a:	e9 11 fb ff ff       	jmpq   400590 <__fxstat@plt>

Disassembly of section .fini:

0000000000400a80 <_fini>:
  400a80:	48 83 ec 08          	sub    $0x8,%rsp
  400a84:	48 83 c4 08          	add    $0x8,%rsp
  400a88:	c3                   	retq   
